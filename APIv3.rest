.. vim: ft=rst sts=2 sw=2 tw=70
.. default-role:: literal

APIv3: REST
===========

This document discusses application of REST_ principles in the context
of the Studio HTTP API.

.. _REST: REST.rest

Goals and Means
***************

Goals
+++++

  Extensibility, scalability, pragmatism.

* We want the API to be durable in face of time and scale.
* We want to be able to evolve both the interface and implementation,
  potentially keeping compatibility with old clients.
* We want to afford the same to clients.
* We want the API to cover the whole feature set of SUSE Studio.
* We do not want to close the door to converging the api and web-ui
  controllers without a very good reason.
* We want the API to be usable with low effort on the part of the
  client software authors.
* Inexperienced programmers should be able to use the API.

Means
+++++

  Generality, readability, coarseness, late binding, interfaces first.

* The web-ui URLs should be meaningful to humans which means preference
  for natural identifiers.
* The quality of the interface should trump implementation concerns
  (up to a limit).
* As is the case with all remote services, each use has large overhead
  both in time and computer resources.  It's cheaper to give clients
  more information than to force them to access the API twice.
* Content negotiation enables late binding of an URI reference to a
  representation, "enabling content negotiation to take place based on
  characteristics of the request", and "to reference the concept
  rather than some singular representation of that concept, thus
  removing the need to change all existing links whenever the
  representation changes".

Partial updates
***************

Partial updates (eg. appliance configuration) should use `PATCH`.
HTTPbis:

  Partial content updates are possible by targeting a separately
  identified resource with state that overlaps a portion of the larger
  resource, or by using a different method that has been specifically
  defined for partial updates (for example, the PATCH method defined
  in [RFC5789]).

Expires header
**************

The `Expires` header should reflect real-world considerations such
as the build expiration policy.

Error responses
***************

APIv2 abuses 400 Bad Request for all kinds of error conditions.
This status code is intended for "malformed syntax" situations,
where *syntax* refers to the syntax of the HTTP request, not to
application-level semantic problems with an otherwise correct
HTTP request.
A good chunk of current 400 responses should be 405 Method Not Allowed
instead.

Natural routes
**************

Routes exposed by v3 should use natural ids as much as possible.

Routes with two synthetic ids where one id implies the only possible
value of the other necessitate extra code to detect and mitigate
inconsistencies.
What happens with `GET /appliances/3/files/12` if the file with id=12
is in fact part of appliance #6?

Only unique and/or stable natural ids can be used.

* appliance names are not unique even within the scope
  of a single user -> bad
* overlay file paths in an appliance (image) are not stable
  (can change over time) but they're unique at any moment -> ok

Specifications
**************

HTTP 1.1
http://tools.ietf.org/html/rfc2068

HTTPbis
http://tools.ietf.org/wg/httpbis/

PATCH method for HTTP
https://tools.ietf.org/rfc/rfc5789

Prefer header
http://datatracker.ietf.org/doc/draft-snell-http-prefer/

URI Template
http://tools.ietf.org/html/rfc6570

JSON, application/json
http://tools.ietf.org/html/rfc4627

application/json-patch
http://datatracker.ietf.org/doc/draft-ietf-appsawg-json-patch/

JSON schema
http://tools.ietf.org/html/draft-zyp-json-schema-04

JSON pointer
http://datatracker.ietf.org/doc/draft-ietf-appsawg-json-pointer/

Link relations
http://datatracker.ietf.org/doc/draft-snell-additional-link-relations/

XML media types (foo/bar+xml)
http://datatracker.ietf.org/doc/draft-ietf-appsawg-xml-mediatypes/

On Linking Alternative Representations To Enable Discovery And Publishing
http://www.w3.org/2001/tag/doc/alternatives-discovery.html

REST
http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm

